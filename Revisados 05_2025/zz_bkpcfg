#!/bin/bash

##########################################################################
# SCRIPT DE BACKUP DE CONFIGURAÇÕES DE SISTEMA
#
# Nome.........: zz_bkpcfg
# Descrição....: Realiza o backup de diretórios importantes e da crontab
#                para um arquivo .tar.gz, mantendo apenas backups recentes.
# Autor........: Antonio Tedim
# Data criação.: 26/01/2024
# Última modif.: 10/05/2025
#
# Funcionalidades:
#   - Gera backup compactado (.tgz) com data e hostname no nome.
#   - Exclui backups com mais de X dias, conforme variável `dias_reter`.
#   - Cria diretórios de destino automaticamente se não existirem.
#   - Gera arquivo com crontab atual em /etc/scripts/cron.txt.
#   - Permite evitar exclusão de backups antigos com a flag `-nodel`.
#   - Permite envio de e-mail após o backup com a flag `-mail`.
#
# Uso:
#   ./zz_bkpcfg              -> Executa backup e remove arquivos antigos
#   ./zz_bkpcfg -nodel       -> Executa backup sem excluir backups antigos
#   ./zz_bkpcfg -mail        -> Executa backup e envia e-mail
#   ./zz_bkpcfg -nodel -mail -> Executa backup sem excluir e envia e-mail
#
##########################################################################

# Função para verificar se o diretório existe e criar, se necessário
verifica_ou_cria_diretorio() {
    if [ ! -d "$1" ]; then
        echo "Diretório '$1' não existe. Criando..."
        mkdir -p "$1"
    fi
}

# Função para excluir backups antigos, mantendo apenas os últimos X dias
limpa_backups_antigos() {
    if [ "$flag_nodel" != "sim" ]; then
        echo "Removendo backups com mais de $dias_reter dias em $diretorio_destino..."
        find "$diretorio_destino" -name "*_configs_*.tgz" -type f -mtime +$dias_reter -exec rm -f {} \;
    else
        echo "Flag -nodel ativada. Nenhum backup antigo será excluído."
    fi
}

# Parse de opções
flag_nodel="nao"
flag_mail="nao"
for arg in "$@"; do
    case "$arg" in
        -nodel) flag_nodel="sim" ;;
        -mail)  flag_mail="sim" ;;
    esac
done

# Quantidade de dias para manter backups
dias_reter=2

# Diretórios e exclusões
diretorios="/etc/scripts /etc/ssh /etc/samba"
excluidos="/etc/scripts/bkp_configs"
diretorio_destino="/etc/scripts/bkp_configs"

# Datas e sistema
data=$(date +"%d%m%Y")
hora_inicio=$(date +"%d/%m/%Y - %H:%M:%S")
host=$(hostname)
ip_lan=$(zz_ip ls 2>/dev/null)
arquivo="${host}_configs_${data}.tgz"

# Garante que o diretório de destino existe
verifica_ou_cria_diretorio "$diretorio_destino"

# Exporta crontab
crontab -l > "/etc/scripts/cron.txt"

# Monta exclusões para o tar
exclui_args=""
for excluido in $excluidos; do
    exclui_args+="--exclude=$excluido "
done

# Executa o backup
tar zcvfp "${diretorio_destino}/${arquivo}" $exclui_args $diretorios

# Marca hora de término
hora_fim=$(date +"%d/%m/%Y - %H:%M:%S")

# Limpa backups antigos
limpa_backups_antigos

# Mensagem final
echo "Backup diário e crontab concluídos em $(date +"%Y-%m-%d %H:%M:%S")"

# Envia e-mail se flag_mail estiver ativa
if [ "$flag_mail" = "sim" ]; then
    email="antonio.tedim@gmail.com"

    titulo=$(cat <<EOF
Backup $host ($ip_lan) realizado
EOF
)

    msg=$(cat <<EOF
O Backup do host $host com IP $ip_lan foi executado com sucesso.

O conteúdo das pastas:
$diretorios

foi guardado com sucesso.

Backup iniciado em : $hora_inicio
Backup finalizado  : $hora_fim
EOF
)

    zz_mail "$email" "$titulo" "$msg" "${diretorio_destino}/${arquivo}"
fi
