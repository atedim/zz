#!/bin/bash

# Verifica se o parted esta instalado
if ! command -v parted &> /dev/null
then
    clear
    echo "O parted precisa estar instalado para executar este script."
    exit 1
fi

# Lista os discos presentes no sistema
echo "Discos disponiveis no sistema:"
DISCOS=($(lsblk -dn -o NAME,SIZE,TYPE | grep disk | awk '{print "/dev/"$1}'))
for i in "${!DISCOS[@]}"; do
    echo "$((i+1)) - ${DISCOS[i]}"
done

# Solicita a selecao do disco pelo numero
read -p "Selecione o numero do disco (1-${#DISCOS[@]}): " NUMERO

# Verifica se o numero √© valido
if [[ $NUMERO -lt 1 || $NUMERO -gt ${#DISCOS[@]} ]]; then
    echo "Numero invalido. Por favor, selecione um numero entre 1 e ${#DISCOS[@]}."
    exit 1
fi

DISCO=${DISCOS[$((NUMERO-1))]}

# Verifica se o disco esta montado
MONTADO=$(lsblk -o MOUNTPOINT -nr "$DISCO" | grep -v "^$")

if [ -n "$MONTADO" ]; then
    echo "O disco $DISCO esta montado em $MONTADO. Tentando desmontar..."
    umount "$DISCO"* 2>/dev/null

    # Verifica se o disco foi desmontado com sucesso
    MONTADO=$(lsblk -o MOUNTPOINT -nr "$DISCO" | grep -v "^$")
    if [ -n "$MONTADO" ]; then
        echo "Erro: Nao foi possivel desmontar o disco $DISCO. Abortando."
        exit 1
    else
        echo "Disco $DISCO desmontado com sucesso."
    fi
else
    echo "O disco $DISCO ja esta desmontado."
fi

# Solicita o nome do disco
read -p "Informe o nome do disco: " NOMEDODISCO

# Exibe o tamanho total utiliz·vel do disco
TAMANHO_DISCO=$(lsblk -b -dn -o SIZE "$DISCO")
TAMANHO_DISCO_GB=$((TAMANHO_DISCO / 1024 / 1024 / 1024))
echo "O tamanho total utilizavel do disco $DISCO e de $TAMANHO_DISCO_GB GB."

# Remove assinaturas anteriores
echo "Limpando o disco $DISCO..."
wipefs -a -f "$DISCO"

# Cria a particao GPT usando o parted
echo "Criando particao GPT no $DISCO..."
parted "$DISCO" mklabel gpt
parted "$DISCO" mkpart primary ext4 0% 100%

# Formata a particao com ext4
PARTICAO="${DISCO}1"
echo "Formatando a particao $PARTICAO com ext4..."
mkfs.ext4 -j -F -L "$NOMEDODISCO" -m 0 "$PARTICAO"

# Exibe mensagem de conclusao
UUID=$(blkid -s UUID -o value "$PARTICAO")
echo "Disco $NOMEDODISCO formatado com sucesso no $PARTICAO."
echo "UUID da parti√ß√£o: $UUID"

